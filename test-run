#!/bin/bash -u
THIS="${0##*/}"
BASE="${THIS%.*}"
CDIR=$([ -n "${0%/*}" ] && cd "${0%/*}" 2>/dev/null; pwd)

. $CDIR/ansible-tools.rc $@ ||
  exit 127

SED=""
[ -z "$SED" ] && SED=$(type -p gsed 2>/dev/null)
[ -z "$SED" ] && SED=$(type -p sed 2>/dev/null)

play_playdir=""
play_playbook="test.yml"
play_inventory="inventory"
play_options="-D"

for dir in ./ ./tests ../tests
do
  [ -e "$dir/$play_playbook" ] ||
    continue
  play_playdir=$(cd "$dir" 1>/dev/null 2>&1; pwd)
  play_playbook="$play_playdir/$play_playbook"
  play_inventory="$play_playdir/$play_inventory"
  break
done

[ -e "$play_playbook" ] || {
  echo "$THIS: 'test.yml' no such file." 1>&2
  exit 1
}
[ -e "$play_inventory" ] || {
  echo "localhost" >$play_inventory
}

casenamelist=""

clean_only=0
cleanuptag=1
syntax_chk=0

test_base_dir="${play_playdir:-.}"
test_root_dir="${test_base_dir}/target"
test_owner=$(id -un 2>/dev/null)
test_group=$(id -gn 2>/dev/null)

test_prefix_dir=""

c_extra_vars=""
c_extra_vars="${c_extra_vars} -e test_run=yes"
c_extra_vars="${c_extra_vars} -e test_owner=${test_owner}"
c_extra_vars="${c_extra_vars} -e test_group=${test_group}"
c_extra_vars="${c_extra_vars} -e test_root_dir=${test_root_dir}"
[ -d "${test_base_dir}/test-setup" ] &&
c_extra_vars="${c_extra_vars} -e test_setup_dir=${test_base_dir}/test-setup"
[ -d "${test_base_dir}/test-teardown" ] &&
c_extra_vars="${c_extra_vars} -e test_teardown_dir=${test_base_dir}/test-teardown"

for cfg in \
./ansible.cfg \
"$play_playdir/ansible.cfg" \
"$HOME/.ansible-tools.d/ansible.cfg" \
"$HOME/.ansible.cfg" \
"$CDIR/ansible.cfg"
do
  [ -e "$cfg" ] ||
    continue
  ANSIBLE_CONFIG="${cfg}"
  export ANSIBLE_CONFIG
  break
done

usage() {
  echo "Usage: $THIS name" 1>&2
  exit 1
}

while [ $# -gt 0 ]
do
  case $1 in
  -C|--dry-run)
    play_options="${play_options} -C"
    ;;
  --play-args)
    play_options="${play_options} ${1}"
    ;;
  --syntax-check)
    syntax_chk=1
    ;;
  --reset)
    clean_only=1
    ;;
  --no-clean)
    cleanuptag=0
    ;;
  -h|--help)
    usage
    ;;
  -*)
    ;;
  *)
    casenamelist="${casenamelist} ${1}"    
    ;;
  esac
  shift
done

[ $syntax_chk -ne 0 ] && {
  ansible-playbook -vvvv \
    -i "${play_inventory}" "${play_playbook}" \
    -M ./ --syntax-check
  exit $?
}

[ $clean_only -ne 0 ] &&
[ -d "${test_root_dir}" ] && {
  rm -vrf "${test_root_dir}"
  echo
  echo "clean."
  exit 0
}

[ -d "${test_root_dir}" ] || {
  mkdir -p "${test_root_dir}" 1>/dev/null 2>&1
}

[ -z "$casenamelist" ] && {
  casenamelist=$(
    ansible-playbook -i "${play_inventory}" "${play_playbook}" --list-tags |
    $SED -nre 's/^[ ]*play.*[ ]*TAGS:[ ]*\[(.+)\].*$/\1/gp' |sort -u 2>/dev/null)
}
[ -z "$casenamelist" ] && {
  casenamelist="default"
}

errors=0
exitst=0

for casename in $casenamelist
do

  test_prefix_dir="${test_root_dir}/${casename}"

  [ $cleanuptag -ne 0 ] &&
  [ -d "${test_prefix_dir}" ] && {
    rm -rf "${test_prefix_dir}" 1>/dev/null 2>&1
  }

  [ -d "${test_prefix_dir}" ] || {
    mkdir -p "${test_prefix_dir}" 1>/dev/null 2>&1
  }

  case_options="${play_options}"
  
  for optsfile in ${play_playdir}/{,opts/,play-options/}{all,$casename}.opts
  do
    if [ -r "${optsfile}" ]
    then
      case_options="${case_options} $(cat $optsfile)"
    fi
  done

  case_options=$(echo "$case_options"|$SED -re 's#^ *##g' 2>/dev/null)
  
  extra_vars="${c_extra_vars}"
  extra_vars="${extra_vars} -e test_casename=${casename}"
  extra_vars="${extra_vars} -e test_prefix_dir=${test_prefix_dir}"
  extra_vars="${extra_vars} -e prefix_dir=${test_prefix_dir}"
  
  for varsfile in ${play_playdir}/{,vars/}{all,$casename}.{yml,json}
  do
    if [ -r "${varsfile}" ]
    then
      extra_vars="${extra_vars} -e @${varsfile}"
    fi
  done

  extra_vars=$(echo "$extra_vars"|$SED -re 's#^ *##g' 2>/dev/null)

  printf " %-31s ......... " "$casename"

  : && {

  cat <<_LOG_
[$THIS]
------------------------------------------------------------------------
--  Test Case:
--    ${casename} in playbook:${play_playbook}
--  Play Options: 
--    -vvvv
--    -i ${play_inventory}
--    ${case_options}
--    ${extra_vars}
------------------------------------------------------------------------

_LOG_

  ansible-playbook -vvvv \
    -i "${play_inventory}" "${play_playbook}" \
    -t "$casename" $case_options $extra_vars

  } 1>"${test_prefix_dir}.log" 2>&1

  exitst=$?

  if [ $exitst -eq 0 ] &&
     tail -n 3 "${test_prefix_dir}.log" |
     grep -E "unreachable=0\s+failed=0" 1>/dev/null 2>&1
  then
    echo "OK."
  else
    echo "NG."
    echo
    echo "{{{ ${casename}.log"
    echo
    cat "${test_prefix_dir}.log"
    echo
    echo "}}} ${casename}.log"
    errors=$(( errors+1 ))
  fi

done

if [ $errors -ne 0 ]
then
  echo
  echo "@@@ ${errors} error(s)"
fi

exit $errors
