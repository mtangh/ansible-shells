# ansible-tools.rc
ANSIBLETOOLS_RC="${BASH_SOURCE##*/}"
ANSIBLETOOLSDIR=$([ -n "${BASH_SOURCE%/*}" ] && cd "${BASH_SOURCE%/*}" 2>/dev/null; pwd)

# Set path
if [ -d "$ANSIBLETOOLSDIR" ]
then
  echo "$PATH" |
  grep -E '^(.+:|)'"${ANSIBLETOOLSDIR}"'(:.+|)$' 1>/dev/null 2>&1 || {
    PATH="${PATH}:${ANSIBLETOOLSDIR}"
    export PATH
  }
fi

# Load the functions
[ -d "$ANSIBLETOOLSDIR/functions" ] &&
for function in $ANSIBLETOOLSDIR/functions/*
do
  . "$function"
done 1>/dev/null 2>&1
unset function

# ansible config
ansible-tools-rc() {
  local ansibletoolsrc=""
  local ansible_config=""
  ANSIBLE_CONDIF=""
  for ansibletoolsrc in \
    ./.ansible{,-tools}.proj \
    ${HOME}/.{,.ansible-tools.d/}ansible-tools.rc
  do
    [ -r "$ansibletoolsrc" ] && {
      . "$ansibletoolsrc" &&
      break
    }
  done 1>/dev/null 2>&1
  [ -z "$ANSIBLE_CONFIG" ] &&
  for ansible_config in \
    ./{.,}ansible.cfg \
    ${HOME}/.{,ansible-tools.d/}ansible.cfg \
    ${ANSIBLETOOLSDIR}/ansible.cfg
  do
    [ -e "$ansible_config" ] && {
      ANSIBLE_CONFIG="${ansible_config}"
      break
    }
  done
  [ -z "$ANSIBLE_CONFIG" ] ||
  echo "export ANSIBLE_CONFIG=${ANSIBLE_CONFIG}"
  return $?
}

# Set ANSIBLE_CONFIG
ansible-tools-rc

# Author
ANSIBLETOOLS_AUTHOR="${AUTHOR:-$(id -un 2>/dev/null)}"

# Company
ANSBILETOOLS_COMPANY="${COMPANY:-$(hostname 2>/dev/null)}"

# Role template
ANSIBLETOOLS_TMPLTDIAR="$ANSIBLETOOLSDIR/role.tmplt.d"

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
